/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type ApiError, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, type UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZip400Error}
 */
// @ts-ignore
export function createDownloadZip400ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZip400Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZip403Error}
 */
// @ts-ignore
export function createDownloadZip403ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZip403Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZip404Error}
 */
// @ts-ignore
export function createDownloadZip404ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZip404Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZip422Error}
 */
// @ts-ignore
export function createDownloadZip422ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZip422Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZip500Error}
 */
// @ts-ignore
export function createDownloadZip500ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZip500Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZipPostRequestBody}
 */
// @ts-ignore
export function createDownloadZipPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZipPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZipPostResponse_data}
 */
// @ts-ignore
export function createDownloadZipPostResponse_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZipPostResponse_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadZipPostResponse}
 */
// @ts-ignore
export function createDownloadZipPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadZipPostResponse;
}
/**
 * The deserialization information for the current model
 * @param DownloadZip400Error The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZip400Error(downloadZip400Error: Partial<DownloadZip400Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { downloadZip400Error.data = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "message": n => { downloadZip400Error.messageEscaped = n.getStringValue(); },
        "success": n => { downloadZip400Error.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZip403Error The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZip403Error(downloadZip403Error: Partial<DownloadZip403Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { downloadZip403Error.data = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "message": n => { downloadZip403Error.messageEscaped = n.getStringValue(); },
        "success": n => { downloadZip403Error.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZip404Error The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZip404Error(downloadZip404Error: Partial<DownloadZip404Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { downloadZip404Error.data = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "message": n => { downloadZip404Error.messageEscaped = n.getStringValue(); },
        "success": n => { downloadZip404Error.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZip422Error The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZip422Error(downloadZip422Error: Partial<DownloadZip422Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { downloadZip422Error.data = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "message": n => { downloadZip422Error.messageEscaped = n.getStringValue(); },
        "success": n => { downloadZip422Error.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZip500Error The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZip500Error(downloadZip500Error: Partial<DownloadZip500Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { downloadZip500Error.data = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "message": n => { downloadZip500Error.messageEscaped = n.getStringValue(); },
        "success": n => { downloadZip500Error.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZipPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZipPostRequestBody(downloadZipPostRequestBody: Partial<DownloadZipPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "path": n => { downloadZipPostRequestBody.path = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZipPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZipPostResponse(downloadZipPostResponse: Partial<DownloadZipPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { downloadZipPostResponse.data = n.getObjectValue<DownloadZipPostResponse_data>(createDownloadZipPostResponse_dataFromDiscriminatorValue); },
        "message": n => { downloadZipPostResponse.message = n.getStringValue(); },
        "success": n => { downloadZipPostResponse.success = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadZipPostResponse_data The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadZipPostResponse_data(downloadZipPostResponse_data: Partial<DownloadZipPostResponse_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "base64": n => { downloadZipPostResponse_data.base64 = n.getStringValue(); },
        "size": n => { downloadZipPostResponse_data.size = n.getNumberValue(); },
    }
}
export interface DownloadZip400Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The data property
     */
    data?: UntypedNode | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface DownloadZip403Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The data property
     */
    data?: UntypedNode | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface DownloadZip404Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The data property
     */
    data?: UntypedNode | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface DownloadZip422Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The data property
     */
    data?: UntypedNode | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface DownloadZip500Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The data property
     */
    data?: UntypedNode | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface DownloadZipPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The path property
     */
    path?: string | null;
}
export interface DownloadZipPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * The data property
     */
    data?: DownloadZipPostResponse_data | null;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The success property
     */
    success?: boolean | null;
}
export interface DownloadZipPostResponse_data extends AdditionalDataHolder, Parsable {
    /**
     * ZIPファイルのBase64エンコード文字列
     */
    base64?: string | null;
    /**
     * ZIPファイルのサイズ（バイト単位）
     */
    size?: number | null;
}
/**
 * Builds and executes requests for operations under /download-zip
 */
export interface DownloadZipRequestBuilder extends BaseRequestBuilder<DownloadZipRequestBuilder> {
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DownloadZipPostResponse>}
     * @throws {DownloadZip400Error} error when the service returns a 400 status code
     * @throws {DownloadZip403Error} error when the service returns a 403 status code
     * @throws {DownloadZip404Error} error when the service returns a 404 status code
     * @throws {DownloadZip422Error} error when the service returns a 422 status code
     * @throws {DownloadZip500Error} error when the service returns a 500 status code
     */
     post(body: DownloadZipPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DownloadZipPostResponse | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: DownloadZipPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param DownloadZip400Error The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZip400Error(writer: SerializationWriter, downloadZip400Error: Partial<DownloadZip400Error> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZip400Error || isSerializingDerivedType) { return; }
    writer.writeObjectValue("data", downloadZip400Error.data);
    writer.writeStringValue("message", downloadZip400Error.messageEscaped);
    writer.writeBooleanValue("success", downloadZip400Error.success);
    writer.writeAdditionalData(downloadZip400Error.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZip403Error The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZip403Error(writer: SerializationWriter, downloadZip403Error: Partial<DownloadZip403Error> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZip403Error || isSerializingDerivedType) { return; }
    writer.writeObjectValue("data", downloadZip403Error.data);
    writer.writeStringValue("message", downloadZip403Error.messageEscaped);
    writer.writeBooleanValue("success", downloadZip403Error.success);
    writer.writeAdditionalData(downloadZip403Error.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZip404Error The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZip404Error(writer: SerializationWriter, downloadZip404Error: Partial<DownloadZip404Error> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZip404Error || isSerializingDerivedType) { return; }
    writer.writeObjectValue("data", downloadZip404Error.data);
    writer.writeStringValue("message", downloadZip404Error.messageEscaped);
    writer.writeBooleanValue("success", downloadZip404Error.success);
    writer.writeAdditionalData(downloadZip404Error.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZip422Error The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZip422Error(writer: SerializationWriter, downloadZip422Error: Partial<DownloadZip422Error> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZip422Error || isSerializingDerivedType) { return; }
    writer.writeObjectValue("data", downloadZip422Error.data);
    writer.writeStringValue("message", downloadZip422Error.messageEscaped);
    writer.writeBooleanValue("success", downloadZip422Error.success);
    writer.writeAdditionalData(downloadZip422Error.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZip500Error The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZip500Error(writer: SerializationWriter, downloadZip500Error: Partial<DownloadZip500Error> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZip500Error || isSerializingDerivedType) { return; }
    writer.writeObjectValue("data", downloadZip500Error.data);
    writer.writeStringValue("message", downloadZip500Error.messageEscaped);
    writer.writeBooleanValue("success", downloadZip500Error.success);
    writer.writeAdditionalData(downloadZip500Error.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZipPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZipPostRequestBody(writer: SerializationWriter, downloadZipPostRequestBody: Partial<DownloadZipPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZipPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("path", downloadZipPostRequestBody.path);
    writer.writeAdditionalData(downloadZipPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZipPostResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZipPostResponse(writer: SerializationWriter, downloadZipPostResponse: Partial<DownloadZipPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZipPostResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<DownloadZipPostResponse_data>("data", downloadZipPostResponse.data, serializeDownloadZipPostResponse_data);
    writer.writeStringValue("message", downloadZipPostResponse.message);
    writer.writeBooleanValue("success", downloadZipPostResponse.success);
    writer.writeAdditionalData(downloadZipPostResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param DownloadZipPostResponse_data The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadZipPostResponse_data(writer: SerializationWriter, downloadZipPostResponse_data: Partial<DownloadZipPostResponse_data> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadZipPostResponse_data || isSerializingDerivedType) { return; }
    writer.writeStringValue("base64", downloadZipPostResponse_data.base64);
    writer.writeNumberValue("size", downloadZipPostResponse_data.size);
    writer.writeAdditionalData(downloadZipPostResponse_data.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const DownloadZipRequestBuilderUriTemplate = "{+baseurl}/download-zip";
/**
 * Metadata for all the requests in the request builder.
 */
export const DownloadZipRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: DownloadZipRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createDownloadZip400ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            403: createDownloadZip403ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createDownloadZip404ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            422: createDownloadZip422ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createDownloadZip500ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDownloadZipPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDownloadZipPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
