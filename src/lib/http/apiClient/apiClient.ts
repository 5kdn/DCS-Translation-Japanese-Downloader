/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { CreatePrRequestBuilderRequestsMetadata, type CreatePrRequestBuilder } from './createPr/index.js';
// @ts-ignore
import { DownloadFilesRequestBuilderRequestsMetadata, type DownloadFilesRequestBuilder } from './downloadFiles/index.js';
// @ts-ignore
import { DownloadZipRequestBuilderRequestsMetadata, type DownloadZipRequestBuilder } from './downloadZip/index.js';
// @ts-ignore
import { HealthRequestBuilderRequestsMetadata, type HealthRequestBuilder } from './health/index.js';
// @ts-ignore
import { TreeRequestBuilderRequestsMetadata, type TreeRequestBuilder } from './tree/index.js';
// @ts-ignore
import { apiClientProxifier, ParseNodeFactoryRegistry, SerializationWriterFactoryRegistry, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type RequestAdapter } from '@microsoft/kiota-abstractions';
// @ts-ignore
import { FormParseNodeFactory, FormSerializationWriterFactory } from '@microsoft/kiota-serialization-form';
// @ts-ignore
import { JsonParseNodeFactory, JsonSerializationWriterFactory } from '@microsoft/kiota-serialization-json';
// @ts-ignore
import { MultipartSerializationWriterFactory } from '@microsoft/kiota-serialization-multipart';
// @ts-ignore
import { TextParseNodeFactory, TextSerializationWriterFactory } from '@microsoft/kiota-serialization-text';

/**
 * The main entry point of the SDK, exposes the configuration and the fluent API.
 */
export interface ApiClient extends BaseRequestBuilder<ApiClient> {
    /**
     * The createPr property
     */
    get createPr(): CreatePrRequestBuilder;
    /**
     * The downloadFiles property
     */
    get downloadFiles(): DownloadFilesRequestBuilder;
    /**
     * The downloadZip property
     */
    get downloadZip(): DownloadZipRequestBuilder;
    /**
     * The health property
     */
    get health(): HealthRequestBuilder;
    /**
     * The tree property
     */
    get tree(): TreeRequestBuilder;
}
/**
 * Instantiates a new {@link ApiClient} and sets the default values.
 * @param requestAdapter The request adapter to use to execute the requests.
 */
// @ts-ignore
export function createApiClient(requestAdapter: RequestAdapter) {
    if (requestAdapter === undefined) {
        throw new Error("requestAdapter cannot be undefined");
    }
    const serializationWriterFactory = requestAdapter.getSerializationWriterFactory() as SerializationWriterFactoryRegistry;
    const parseNodeFactoryRegistry = requestAdapter.getParseNodeFactory() as ParseNodeFactoryRegistry;
    const backingStoreFactory = requestAdapter.getBackingStoreFactory();
    
    if (parseNodeFactoryRegistry.registerDefaultDeserializer) {
        parseNodeFactoryRegistry.registerDefaultDeserializer(JsonParseNodeFactory, backingStoreFactory);
        parseNodeFactoryRegistry.registerDefaultDeserializer(TextParseNodeFactory, backingStoreFactory);
        parseNodeFactoryRegistry.registerDefaultDeserializer(FormParseNodeFactory, backingStoreFactory);
    }
    
    if (serializationWriterFactory.registerDefaultSerializer) {
        serializationWriterFactory.registerDefaultSerializer(JsonSerializationWriterFactory);
        serializationWriterFactory.registerDefaultSerializer(TextSerializationWriterFactory);
        serializationWriterFactory.registerDefaultSerializer(FormSerializationWriterFactory);
        serializationWriterFactory.registerDefaultSerializer(MultipartSerializationWriterFactory);
    }
    
    if (requestAdapter.baseUrl === undefined || requestAdapter.baseUrl === null || requestAdapter.baseUrl === "") {
        requestAdapter.baseUrl = "https://dcs-translation-japanese-cloudflare-worker.dcs-translation-japanese.workers.dev";
    }
    const pathParameters: Record<string, unknown> = {
        "baseurl": requestAdapter.baseUrl,
    };
    return apiClientProxifier<ApiClient>(requestAdapter, pathParameters, ApiClientNavigationMetadata, undefined);
}
/**
 * Uri template for the request builder.
 */
export const ApiClientUriTemplate = "{+baseurl}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ApiClientNavigationMetadata: Record<Exclude<keyof ApiClient, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    createPr: {
        requestsMetadata: CreatePrRequestBuilderRequestsMetadata,
    },
    downloadFiles: {
        requestsMetadata: DownloadFilesRequestBuilderRequestsMetadata,
    },
    downloadZip: {
        requestsMetadata: DownloadZipRequestBuilderRequestsMetadata,
    },
    health: {
        requestsMetadata: HealthRequestBuilderRequestsMetadata,
    },
    tree: {
        requestsMetadata: TreeRequestBuilderRequestsMetadata,
    },
};
/* tslint:enable */
/* eslint-enable */
