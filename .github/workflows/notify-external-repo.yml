# ------------------------------------------------------------
# Workflow Name : Notify external repository
# Trigger       :
#                 - GitHub Releaseがpublishedされた時
#                 - 手動 workflow_dispatch 実行時
# Purpose       :
#                 - 外部リポジトリ（TARGET_OWNER/TARGET_REPO）にrepository_dispatch イベントを送信する。
#
# 設定項目（Settings → Variables / Secrets）:
# - TARGET_OWNER          : 通知先リポジトリの所有者（省略時は自身）
# - TARGET_REPO           : 通知先リポジトリ名（必須）
# - TARGET_EVENT_TYPE     : repository_dispatch のイベント名（例: pages_release）
# - EXTERNAL_REPO_TOKEN   : 通知先リポジトリへのFine-grained PAT
# ------------------------------------------------------------
name: Notify external repository

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag'
        required: false
        type: string

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Show event context
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "dispatch.event_type=${{ github.event.action }}"
          echo "payload.tag=${{ github.event.client_payload.tag }}"
          echo "inputs.tag=${{ inputs.tag }}"

      - name: Ensure token set
        if: ${{ env.PAGE_BUILD_REPOSITORY != '' }}
        run: |
          if [ -z "${{ secrets.PAGES_SOURCE_TOKEN }}" ]; then
            echo "PAGES_SOURCE_TOKEN is not set" >&2
            exit 1
          fi

      - name: Send repository_dispatch to external repository
        env:
          TARGET_OWNER: ${{ vars.TARGET_OWNER }}
          TARGET_REPO: ${{ vars.TARGET_REPO }}
          EVENT_TYPE: 'pages_release'
          TOKEN: ${{ secrets.EXTERNAL_REPO_TOKEN }}
        run: |
          if [ -z "$TARGET_REPO" ]; then
            echo "Error: TARGET_REPO not set (define in Repository → Settings → Variables)."
            exit 1
          fi

          PAYLOAD=$(jq -n \
            --arg source_repo "${{ github.repository }}" \
            --arg tag "${{ inputs.tag || github.event.release.tag_name || github.ref_name }}" \
            --arg sha "${{ github.sha }}" \
            '{source_repo:$source_repo, tag:$tag, sha:$sha}')

          curl -sS -X POST \
            -H "Authorization: token ${TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${TARGET_OWNER}/${TARGET_REPO}/dispatches" \
            -d "$(jq -n --arg et "$EVENT_TYPE" --argjson pl "$PAYLOAD" '{event_type:$et, client_payload:$pl}')"